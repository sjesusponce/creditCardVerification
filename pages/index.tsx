import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { MouseEventHandler, useState } from 'react'
import CreditCardFrontPreview from '../components/CreditCardPreview/CreditCardFrontPreview/credit-card-front-preview'
import CreditCardRearPreview from '../components/CreditCardPreview/CreditCardRearPreview/credit-card-rear-preview'
import FormVerify from '../components/FormVerify/form-verify'
import styles from '../styles/Home.module.css'

const Home: NextPage = () => {
	const [cardHolder, setCardHolder] = useState('')
	const [cardNumber, setCardNumber] = useState('')
	const [expDateMonth, setExpDateMonth] = useState('')
	const [expDateYear, setExpDateYear] = useState('')
	const [cvc, setCvc] = useState('')
	const [validCardInfo, setValidCardInfo] = useState(
		{
			isCardHolderValid: false,
			isCardNumberValid: false,
			isDateMonthValid: false,
			isDateYearValid: false,
			isCVCValid: false,
		}
	)

	const isDigit = (char: string): boolean => char.length === 1 && char >= '0' && char <= '9';

	const checkString = (word: string):boolean =>{
		const array = word.split('')
		
		return array.find((el)=> !isDigit(el)) != undefined
	}

	const nameVeriticationHandler: MouseEventHandler<HTMLElement> = (e:any) =>{
		const newValidInfo = validCardInfo
		if(e.target.value.length == 0){
			newValidInfo.isCardHolderValid = false
		} else {
			newValidInfo.isCardHolderValid = true
		}

		setValidCardInfo(newValidInfo)
		setCardHolder(e.target.value)
	}

	const numberVerificationHandler: MouseEventHandler<HTMLElement> = (e:any) =>{
		const newValidInfo = validCardInfo
		const numberWithOutWhitespace = e.target.value.split('').filter((el:any)=> el != ' ').join('')

		if(e.target.value.length == 4 && cardNumber.length == 3 || 
			e.target.value.length == 9 && cardNumber.length == 8 || 
			e.target.value.length == 14 && cardNumber.length == 13){
			e.target.value += ' '
		}

		if(e.target.value.length < 19){
			newValidInfo.isCardNumberValid = false
		} else if(checkString(numberWithOutWhitespace)){
			newValidInfo.isCardNumberValid = false
		}else {
			newValidInfo.isCardNumberValid = true
		}
		

		setValidCardInfo(newValidInfo)
		setCardNumber(e.target.value)
	}

	const expDateMonthVerificationHandler: MouseEventHandler<HTMLElement> = (e:any) =>{
		const newValidInfo = validCardInfo
		if(checkString(e.target.value)){
			newValidInfo.isDateMonthValid = false
			console.log('bad month format')
			console.log(newValidInfo)
		} else if (e.target.value.length < 2){
			newValidInfo.isDateMonthValid = false
		} else {
			newValidInfo.isDateMonthValid = true
		}

		setValidCardInfo(newValidInfo)
		setExpDateMonth(e.target.value)
	}

	const expDateYearVerificationHandler: MouseEventHandler<HTMLElement> = (e:any) =>{
		const newValidInfo = validCardInfo
		if(checkString(e.target.value)){
			newValidInfo.isDateYearValid = false
			console.log('bad year format')
			console.log(newValidInfo)
		}else if(e.target.value.length < 2){
			newValidInfo.isDateYearValid = false
		} else {
			newValidInfo.isDateYearValid = true
		}

		setValidCardInfo(newValidInfo)
		setExpDateYear(e.target.value)
	}

	const cvcVerificationHandler: MouseEventHandler<HTMLElement> = (e:any) =>{
		const newValidInfo = validCardInfo
		if(e.target.value.length < 3){
			newValidInfo.isCVCValid = false
		} else if(checkString(e.target.value)){
			newValidInfo.isCVCValid = false
		} else {
			newValidInfo.isCVCValid = true
		}

		setValidCardInfo(newValidInfo)
		setCvc(e.target.value)
	}

	return (
		<div className='h-screen'>
			<Head>
				<title>Card NextJs</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<main className='flex desktop:flex-row mobile:flex-col desktop:justify-between h-full'>
				<section className='desktop:h-screen mobile:h-8 desktop:mb-12 bg-fixed bg-center bg-cover bg-[url("/bg-main-desktop.png")] basis-1/3'> 
					<div className='desktop:fixed mobile:flex desktop:left-[calc(33%-320px)] desktop:top-1/4 mobile:justify-center desktop:h-[30.556rem]'>
						<div className='flex flex-col justify-between h-full mobile:mt-12'>
							<CreditCardFrontPreview 
								cardName={cardHolder} 
								cardNumber={cardNumber}
								expireDate={{month: expDateMonth, year: expDateYear}}
							/>
							<CreditCardRearPreview className='mobile:ml-24'
							 	cvc={cvc}
							/>
						</div>
					</div>
				</section>
				<section className='bg-white basis-2/3 h-full flex justify-center items-center'>

					<FormVerify 
						onCardName={nameVeriticationHandler}
						onCardNumber={numberVerificationHandler}
						onExpDateMonth={expDateMonthVerificationHandler}
						onExpDateYear={expDateYearVerificationHandler}
						onCvc={cvcVerificationHandler}
						isCardNumberValid={validCardInfo.isCardNumberValid}
						isMonthValid={validCardInfo.isDateMonthValid}
						isYearValid={validCardInfo.isDateYearValid}
						isCvcValid={validCardInfo.isCVCValid}/>
				</section>
			</main>
		</div>
	)
}

export default Home
